// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wealthox.DataAccess.Data;

namespace Wealthox.DataAccess.Migrations
{
    [DbContext(typeof(WealthoxContext))]
    [Migration("20190314135338_addedPassword")]
    partial class addedPassword
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wealthox.Entities.Announcements", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid?>("HouseId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Wealthox.Entities.Cities", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int?>("CountyId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Wealthox.Entities.ConstructionMaterial", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ConstructionMaterial");
                });

            modelBuilder.Entity("Wealthox.Entities.Counties", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("Wealthox.Entities.Filters", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int?>("BathroomsNumber");

                    b.Property<int?>("BedroomsNumber");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("County")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Price");

                    b.HasKey("Id");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("Wealthox.Entities.House", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int?>("BathroomsNumber");

                    b.Property<int?>("BedroomsNumber");

                    b.Property<int?>("CityId");

                    b.Property<int?>("CountyId");

                    b.Property<bool?>("HasElectricity");

                    b.Property<bool?>("HasGarage");

                    b.Property<bool?>("HasHeating");

                    b.Property<int?>("Surface");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountyId");

                    b.ToTable("House");
                });

            modelBuilder.Entity("Wealthox.Entities.HouseConstructionMaterial", b =>
                {
                    b.Property<Guid>("HouseId");

                    b.Property<Guid>("ConstructionMaterialId");

                    b.HasKey("HouseId", "ConstructionMaterialId");

                    b.HasIndex("ConstructionMaterialId");

                    b.ToTable("House_ConstructionMaterial");
                });

            modelBuilder.Entity("Wealthox.Entities.Role", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Wealthox.Entities.SearchFilters", b =>
                {
                    b.Property<Guid>("SearchId");

                    b.Property<Guid>("FilterId");

                    b.Property<DateTime?>("SearchDate")
                        .HasColumnType("date");

                    b.HasKey("SearchId", "FilterId");

                    b.ToTable("Search_Filters");
                });

            modelBuilder.Entity("Wealthox.Entities.SearchHistory", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("SearchDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SearchHistory");
                });

            modelBuilder.Entity("Wealthox.Entities.Users", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Password");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Wealthox.Entities.Announcements", b =>
                {
                    b.HasOne("Wealthox.Entities.House", "House")
                        .WithMany("Announcements")
                        .HasForeignKey("HouseId")
                        .HasConstraintName("FK_AnnouncementHouse");

                    b.HasOne("Wealthox.Entities.Users", "User")
                        .WithMany("Announcements")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserAnnouncement");
                });

            modelBuilder.Entity("Wealthox.Entities.Cities", b =>
                {
                    b.HasOne("Wealthox.Entities.Counties", "County")
                        .WithMany("Cities")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_CityCounties");
                });

            modelBuilder.Entity("Wealthox.Entities.House", b =>
                {
                    b.HasOne("Wealthox.Entities.Cities", "City")
                        .WithMany("House")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_HouseCity");

                    b.HasOne("Wealthox.Entities.Counties", "County")
                        .WithMany("House")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_HouseCounty");
                });

            modelBuilder.Entity("Wealthox.Entities.HouseConstructionMaterial", b =>
                {
                    b.HasOne("Wealthox.Entities.ConstructionMaterial", "ConstructionMaterial")
                        .WithMany("HouseConstructionMaterial")
                        .HasForeignKey("ConstructionMaterialId")
                        .HasConstraintName("FK_ConstructionHouse");

                    b.HasOne("Wealthox.Entities.House", "House")
                        .WithMany("HouseConstructionMaterial")
                        .HasForeignKey("HouseId")
                        .HasConstraintName("FK_HouseConstruction");
                });

            modelBuilder.Entity("Wealthox.Entities.SearchHistory", b =>
                {
                    b.HasOne("Wealthox.Entities.Users", "User")
                        .WithMany("SearchHistory")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserSearch");
                });

            modelBuilder.Entity("Wealthox.Entities.Users", b =>
                {
                    b.HasOne("Wealthox.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
