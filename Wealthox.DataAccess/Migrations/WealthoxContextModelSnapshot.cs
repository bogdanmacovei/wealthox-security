// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wealthox.DataAccess.Data;

namespace Wealthox.DataAccess.Migrations
{
    [DbContext(typeof(WealthoxContext))]
    partial class WealthoxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wealhtox.Entities.BuildingTypeLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("BuildingType_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.DwellingTypeLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("DwellingType_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.GarageTypeLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("GarageType_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.HeatingTypeLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("HeatingType_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.HouseStyleLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("HouseStyle_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.QualityLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Quality_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.RoofStyleLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("RoofStyle_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.UtilitiesLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Utilities_Localization");
                });

            modelBuilder.Entity("Wealhtox.Entities.ZoneLocalization", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Zone_Localization");
                });

            modelBuilder.Entity("Wealthox.Entities.Announcements", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid?>("HouseId");

                    b.Property<string>("ImageUrl");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("Price");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Wealthox.Entities.Cities", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int?>("CountyId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Wealthox.Entities.ConstructionMaterial", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ConstructionMaterial");
                });

            modelBuilder.Entity("Wealthox.Entities.Counties", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("Wealthox.Entities.Filters", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int?>("BathroomsNumber");

                    b.Property<int?>("BedroomsNumber");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("County")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Price");

                    b.HasKey("Id");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("Wealthox.Entities.House", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int?>("BuildingType");

                    b.Property<int?>("CityId");

                    b.Property<int?>("CountyId");

                    b.Property<int?>("DwellingType");

                    b.Property<int?>("ExteriorConditions");

                    b.Property<Guid?>("ExteriorMaterial");

                    b.Property<int?>("ExteriorQuality");

                    b.Property<int?>("FenceQuality");

                    b.Property<int?>("FirstFloorArea");

                    b.Property<Guid?>("FoundationMaterial");

                    b.Property<int?>("GarageArea");

                    b.Property<int?>("GarageCondition");

                    b.Property<int?>("GarageNumberOfCars");

                    b.Property<int?>("GarageQuality");

                    b.Property<int?>("GarageType");

                    b.Property<int?>("GarageYearBuilt");

                    b.Property<bool?>("HasAirConditioning");

                    b.Property<int?>("HeatingQuality");

                    b.Property<int?>("HeatingType");

                    b.Property<int?>("HouseStyleType");

                    b.Property<int?>("KitchenQuality");

                    b.Property<int?>("NumberOfBathrooms");

                    b.Property<int?>("NumberOfBedrooms");

                    b.Property<int?>("NumberOfKitchen");

                    b.Property<int?>("OverallConditions");

                    b.Property<int?>("OverallQuality");

                    b.Property<int?>("PoolArea");

                    b.Property<int?>("PoolQuality");

                    b.Property<Guid?>("RoofMaterial");

                    b.Property<int?>("RoofStyleType");

                    b.Property<int?>("SecondFloorArea");

                    b.Property<int?>("TempIdentif");

                    b.Property<int?>("TotalBasementArea");

                    b.Property<int?>("TotalNumberOfRooms");

                    b.Property<int?>("UtilitiesType");

                    b.Property<int?>("YearBuilt");

                    b.Property<int?>("YearRemodel");

                    b.Property<int?>("ZoneType");

                    b.HasKey("Id");

                    b.HasIndex("BuildingType");

                    b.HasIndex("CityId");

                    b.HasIndex("CountyId");

                    b.HasIndex("DwellingType");

                    b.HasIndex("ExteriorConditions");

                    b.HasIndex("ExteriorMaterial");

                    b.HasIndex("ExteriorQuality");

                    b.HasIndex("FenceQuality");

                    b.HasIndex("FoundationMaterial");

                    b.HasIndex("GarageCondition");

                    b.HasIndex("GarageQuality");

                    b.HasIndex("GarageType");

                    b.HasIndex("HeatingQuality");

                    b.HasIndex("HeatingType");

                    b.HasIndex("HouseStyleType");

                    b.HasIndex("KitchenQuality");

                    b.HasIndex("OverallConditions");

                    b.HasIndex("OverallQuality");

                    b.HasIndex("PoolQuality");

                    b.HasIndex("RoofMaterial");

                    b.HasIndex("RoofStyleType");

                    b.HasIndex("UtilitiesType");

                    b.HasIndex("ZoneType");

                    b.ToTable("House");
                });

            modelBuilder.Entity("Wealthox.Entities.HouseConstructionMaterial", b =>
                {
                    b.Property<Guid>("HouseId");

                    b.Property<Guid>("ConstructionMaterialId");

                    b.HasKey("HouseId", "ConstructionMaterialId");

                    b.HasIndex("ConstructionMaterialId");

                    b.ToTable("House_ConstructionMaterial");
                });

            modelBuilder.Entity("Wealthox.Entities.Role", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Wealthox.Entities.SearchFilters", b =>
                {
                    b.Property<Guid>("SearchId");

                    b.Property<Guid>("FilterId");

                    b.Property<DateTime?>("SearchDate")
                        .HasColumnType("date");

                    b.HasKey("SearchId", "FilterId");

                    b.ToTable("Search_Filters");
                });

            modelBuilder.Entity("Wealthox.Entities.SearchHistory", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("SearchDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SearchHistory");
                });

            modelBuilder.Entity("Wealthox.Entities.Users", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Password");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("date");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Wealthox.Entities.Announcements", b =>
                {
                    b.HasOne("Wealthox.Entities.House", "House")
                        .WithMany("Announcements")
                        .HasForeignKey("HouseId")
                        .HasConstraintName("FK_AnnouncementHouse");

                    b.HasOne("Wealthox.Entities.Users", "User")
                        .WithMany("Announcements")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserAnnouncement");
                });

            modelBuilder.Entity("Wealthox.Entities.Cities", b =>
                {
                    b.HasOne("Wealthox.Entities.Counties", "County")
                        .WithMany("Cities")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_CityCounties");
                });

            modelBuilder.Entity("Wealthox.Entities.House", b =>
                {
                    b.HasOne("Wealhtox.Entities.BuildingTypeLocalization", "BuildingTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("BuildingType")
                        .HasConstraintName("FK__House__BuildingT__4CA06362");

                    b.HasOne("Wealthox.Entities.Cities", "City")
                        .WithMany("House")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_HouseCity");

                    b.HasOne("Wealthox.Entities.Counties", "County")
                        .WithMany("House")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_HouseCounty");

                    b.HasOne("Wealhtox.Entities.DwellingTypeLocalization", "DwellingTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("DwellingType")
                        .HasConstraintName("FK__House__DwellingT__4D94879B");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "ExteriorConditionsNavigation")
                        .WithMany("HouseExteriorConditionsNavigation")
                        .HasForeignKey("ExteriorConditions")
                        .HasConstraintName("FK__House__ExteriorC__4E88ABD4");

                    b.HasOne("Wealthox.Entities.ConstructionMaterial", "ExteriorMaterialNavigation")
                        .WithMany("HouseExteriorMaterialNavigation")
                        .HasForeignKey("ExteriorMaterial")
                        .HasConstraintName("FK__House__ExteriorM__4F7CD00D");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "ExteriorQualityNavigation")
                        .WithMany("HouseExteriorQualityNavigation")
                        .HasForeignKey("ExteriorQuality")
                        .HasConstraintName("FK__House__ExteriorQ__5070F446");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "FenceQualityNavigation")
                        .WithMany("HouseFenceQualityNavigation")
                        .HasForeignKey("FenceQuality")
                        .HasConstraintName("FK__House__FenceQual__5165187F");

                    b.HasOne("Wealthox.Entities.ConstructionMaterial", "FoundationMaterialNavigation")
                        .WithMany("HouseFoundationMaterialNavigation")
                        .HasForeignKey("FoundationMaterial")
                        .HasConstraintName("FK__House__Foundatio__52593CB8");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "GarageConditionNavigation")
                        .WithMany("HouseGarageConditionNavigation")
                        .HasForeignKey("GarageCondition")
                        .HasConstraintName("FK__House__GarageCon__534D60F1");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "GarageQualityNavigation")
                        .WithMany("HouseGarageQualityNavigation")
                        .HasForeignKey("GarageQuality")
                        .HasConstraintName("FK__House__GarageQua__5441852A");

                    b.HasOne("Wealhtox.Entities.GarageTypeLocalization", "GarageTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("GarageType")
                        .HasConstraintName("FK__House__GarageTyp__5535A963");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "HeatingQualityNavigation")
                        .WithMany("HouseHeatingQualityNavigation")
                        .HasForeignKey("HeatingQuality")
                        .HasConstraintName("FK__House__HeatingQu__5629CD9C");

                    b.HasOne("Wealhtox.Entities.HeatingTypeLocalization", "HeatingTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("HeatingType")
                        .HasConstraintName("FK__House__HeatingTy__571DF1D5");

                    b.HasOne("Wealhtox.Entities.HouseStyleLocalization", "HouseStyleTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("HouseStyleType")
                        .HasConstraintName("FK__House__HouseStyl__5812160E");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "KitchenQualityNavigation")
                        .WithMany("HouseKitchenQualityNavigation")
                        .HasForeignKey("KitchenQuality")
                        .HasConstraintName("FK__House__KitchenQu__59063A47");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "OverallConditionsNavigation")
                        .WithMany("HouseOverallConditionsNavigation")
                        .HasForeignKey("OverallConditions")
                        .HasConstraintName("FK__House__OverallCo__59FA5E80");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "OverallQualityNavigation")
                        .WithMany("HouseOverallQualityNavigation")
                        .HasForeignKey("OverallQuality")
                        .HasConstraintName("FK__House__OverallQu__5AEE82B9");

                    b.HasOne("Wealhtox.Entities.QualityLocalization", "PoolQualityNavigation")
                        .WithMany("HousePoolQualityNavigation")
                        .HasForeignKey("PoolQuality")
                        .HasConstraintName("FK__House__PoolQuali__5BE2A6F2");

                    b.HasOne("Wealthox.Entities.ConstructionMaterial", "RoofMaterialNavigation")
                        .WithMany("HouseRoofMaterialNavigation")
                        .HasForeignKey("RoofMaterial")
                        .HasConstraintName("FK__House__RoofMater__5CD6CB2B");

                    b.HasOne("Wealhtox.Entities.RoofStyleLocalization", "RoofStyleTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("RoofStyleType")
                        .HasConstraintName("FK__House__RoofStyle__5DCAEF64");

                    b.HasOne("Wealhtox.Entities.UtilitiesLocalization", "UtilitiesTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("UtilitiesType")
                        .HasConstraintName("FK__House__Utilities__5EBF139D");

                    b.HasOne("Wealhtox.Entities.ZoneLocalization", "ZoneTypeNavigation")
                        .WithMany("House")
                        .HasForeignKey("ZoneType")
                        .HasConstraintName("FK__House__ZoneType__5FB337D6");
                });

            modelBuilder.Entity("Wealthox.Entities.HouseConstructionMaterial", b =>
                {
                    b.HasOne("Wealthox.Entities.ConstructionMaterial", "ConstructionMaterial")
                        .WithMany("HouseConstructionMaterial")
                        .HasForeignKey("ConstructionMaterialId")
                        .HasConstraintName("FK_ConstructionHouse");

                    b.HasOne("Wealthox.Entities.House", "House")
                        .WithMany("HouseConstructionMaterial")
                        .HasForeignKey("HouseId")
                        .HasConstraintName("FK_HouseConstruction");
                });

            modelBuilder.Entity("Wealthox.Entities.SearchHistory", b =>
                {
                    b.HasOne("Wealthox.Entities.Users", "User")
                        .WithMany("SearchHistory")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserSearch");
                });

            modelBuilder.Entity("Wealthox.Entities.Users", b =>
                {
                    b.HasOne("Wealthox.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
